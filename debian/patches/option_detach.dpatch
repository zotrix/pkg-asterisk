#! /bin/sh /usr/share/dpatch/dpatch-run
## option_detach.dpatch by Tzafrir Cohen <tzafrir.cohen@xorcom.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: when running asterisk -D: detach, even if -v or -d was given

@DPATCH@
diff -urNad asterisk/asterisk.c /tmp/dpep.ahsnFR/asterisk/asterisk.c
--- asterisk/asterisk.c	2006-01-07 15:19:34.000000000 +0200
+++ /tmp/dpep.ahsnFR/asterisk/asterisk.c	2006-01-07 23:18:59.000000000 +0200
@@ -147,6 +147,7 @@
 int option_nofork=0;			/*!< Do not fork */
 int option_quiet=0;			/*!< Keep quiet */
 int option_console=0;			/*!< Console mode, no background */
+int option_daemonize=0;			/*!< Daemonize. Ever if -v or -d */
 int option_highpriority=0;		/*!< Run in realtime Linux priority */
 int option_remote=0;			/*!< Remote CLI */
 int option_exec=0;			/*!< */
@@ -1833,6 +1834,7 @@
 	printf("   -G <group>      Run as a group other than the caller\n");
 	printf("   -U <user>       Run as a user other than the caller\n");
 	printf("   -c              Provide console CLI\n");
+	printf("   -D              Daemonize even if -v or -d were given\n");
 	printf("   -d              Enable extra debugging\n");
 	printf("   -f              Do not fork\n");
 	printf("   -g              Dump core in case of a crash\n");
@@ -2048,7 +2050,7 @@
 	}
 	*/
 	/* Check for options */
-	while((c=getopt(argc, argv, "tThfdvVqprRgcinx:U:G:C:L:M:")) != -1) {
+	while((c=getopt(argc, argv, "tThfdvVqprRgcDinx:U:G:C:L:M:")) != -1) {
 		switch(c) {
 		case 'd':
 			option_debug++;
@@ -2058,6 +2060,9 @@
 			option_console++;
 			option_nofork++;
 			break;
+		case 'D':
+			option_daemonize++;
+			break;
 		case 'f':
 			option_nofork++;
 			break;
@@ -2250,7 +2255,9 @@
 	} else
 		ast_log(LOG_WARNING, "Unable to open pid file '%s': %s\n", (char *)ast_config_AST_PID, strerror(errno));
 
-	if (!option_verbose && !option_debug && !option_nofork && !option_console) {
+	if (option_daemonize ||
+			(!option_verbose && !option_debug && !option_nofork && !option_console)
+	) {
 		daemon(0,0);
 		/* Blindly re-write pid file since we are forking */
 		unlink((char *)ast_config_AST_PID);
