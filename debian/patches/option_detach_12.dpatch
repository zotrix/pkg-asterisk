#! /bin/sh /usr/share/dpatch/dpatch-run
## option_detach_12.dpatch by Tzafrir Cohen <tzafrir.cohen@xorcom.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: when running asterisk -D: detach, even if -v or -d was given.
## DP: Version for Asterisk 1.2

@DPATCH@
diff -urNad asterisk-1.1.9.0beta1.dfsg.1/asterisk.c /tmp/dpep.w7uc6I/asterisk-1.1.9.0beta1.dfsg.1/asterisk.c
--- asterisk-1.1.9.0beta1.dfsg.1/asterisk.c	2005-10-12 20:45:02.487260265 +0200
+++ /tmp/dpep.w7uc6I/asterisk-1.1.9.0beta1.dfsg.1/asterisk.c	2005-10-12 20:45:52.091130067 +0200
@@ -85,6 +85,7 @@
 int option_debug=0;
 int option_exec_includes=0;
 int option_nofork=0;
+int option_daemonize=0;
 int option_quiet=0;
 int option_console=0;
 int option_highpriority=0;
@@ -1660,6 +1661,7 @@
 	printf("   -G <group>      Run as a group other than the caller\n");
 	printf("   -U <user>       Run as a user other than the caller\n");
 	printf("   -c              Provide console CLI\n");
+	printf("   -D              Daemonize even if -v or -d were given\n");
 	printf("   -d              Enable extra debugging\n");
 	printf("   -f              Do not fork\n");
 	printf("   -g              Dump core in case of a crash\n");
@@ -1860,7 +1862,7 @@
 	}
 	*/
 	/* Check for options */
-	while((c=getopt(argc, argv, "tThfdvVqprRgcinx:U:G:C:M:")) != -1) {
+	while((c=getopt(argc, argv, "tThfdDvVqprRgcinx:U:G:C:M:")) != -1) {
 		switch(c) {
 		case 'd':
 			option_debug++;
@@ -1870,6 +1872,9 @@
 			option_console++;
 			option_nofork++;
 			break;
+		case 'D':
+			option_daemonize++;
+			break;
 		case 'f':
 			option_nofork++;
 			break;
@@ -2037,7 +2042,9 @@
 	} else
 		ast_log(LOG_WARNING, "Unable to open pid file '%s': %s\n", (char *)ast_config_AST_PID, strerror(errno));
 
-	if (!option_verbose && !option_debug && !option_nofork && !option_console) {
+	if (option_daemonize ||
+		(!option_verbose && !option_debug && !option_nofork && !option_console)
+	) {
 		daemon(0,0);
 		/* Blindly re-write pid file since we are forking */
 		unlink((char *)ast_config_AST_PID);
